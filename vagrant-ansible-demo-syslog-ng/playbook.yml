---

- hosts: syslog-ng-servers
  become: yes
  become_method: sudo

  vars:
   - docroot: /opt/deployment/nmon-logger
   - splunk_binpath: /opt/deployment/splunk_bin/splunk-universal-forwarder/splunkforwarder-6.3.2-aaff59bb082c-Linux-x86_64.tgz
   - splunk_installpath: /opt
   - splunk_appname: TA_syslog_nmon
   - splunk_indexer_adress: 192.168.33.1:9997
   - splunk_deploymentserver_adress: 192.168.33.1:8089

  tasks:

    #
    # For Ubuntu
    #

  - block:

    - name: Update cache for Ubuntu

      # Update apt cache
      apt: update_cache=yes

    - name: Install syslog-ng for Ubuntu

      # Install package
      - apt: name=syslog-ng state=present

    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    #
    # For RHEL / Centos
    #

  - block:

    - name: Install syslog-ng for RHEL/CentOS

      # Update package
      yum: name=syslog-ng state=latest

    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

# Configure time zone
  - name: Set timezone variables
    copy: content='Europe/Paris'
          dest=/etc/timezone
          owner=root
          group=root
          mode=0644
          backup=yes
    notify:
      - update timezone

  - block:

    # Create remote hosts directory for logging
    - name: Create the /var/log/remote-hosts directory (for Ubuntu/Debian with syslog owner)
      file: path=/var/log/remote-hosts owner=syslog group=syslog state=directory mode=0755 recurse=no

    # Create nmon performance directory for logging
    - name: Create the /var/log/nmon-performance directory (for Ubuntu/Debian with syslog owner)
      file: path=/var/log/nmon-performance owner=syslog group=syslog state=directory mode=0755 recurse=no

    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

  - block:

    # Create remote hosts directory for logging
    - name: Create the /var/log/remote-hosts directory (for RHEL/CentOS with root owner)
      file: path=/var/log/remote-hosts owner=root group=root state=directory mode=0755 recurse=no

    # Create nmon performance directory for logging
    - name: Create the /var/log/nmon-performance directory (for RHEL/CentOS with root owner)
      file: path=/var/log/nmon-performance owner=root group=root state=directory mode=0755 recurse=no

    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

  # Set this host as a central syslog collector
  - name: Deploy syslog-ng central configuration for global logging
    copy: src={{ docroot }}/vagrant-ansible-demo-syslog-ng/central.conf dest=/etc/syslog-ng/conf.d/
    notify:
        - restart syslog-ng

  # Set this host as a central syslog collector
  - name: Deploy syslog-ng central configuration for nmon performance
    copy: src={{ docroot }}/vagrant-ansible-demo-syslog-ng/nmon-performance.conf dest=/etc/syslog-ng/conf.d/
    notify:
        - restart syslog-ng

  # Verify if Splunk Universal Forwarder is already installed
  - name: Check if Splunk Universal Forwarder path exists
    stat: path={{ splunk_installpath }}/splunkforwarder
    register: check_splunk_path

  # Copy and unarchive Splunk Universal Forwarder if not present
  - name: Copy and unarchive Splunk Universal Forwarder
    unarchive: src={{ splunk_binpath }} dest={{ splunk_installpath }}
    when: check_splunk_path.stat.exists == false

  # Start and accept licence
  - name: Start Splunk Universal Forwarder and accept licence
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk start --answer-yes --no-prompt --accept-license"
    when: check_splunk_path.stat.exists == false

  # Enable boot-start
  - name: Enable boot start for Splunk Universal Forwarder
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk enable boot-start"
    when: check_splunk_path.stat.exists == false

  # Configure Splunk forwarding
  - name: Configure Splunk forwarding
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk add forward-server {{ splunk_indexer_adress }} -auth admin:changeme"
    ignore_errors: yes

  # Configure Splunk as a client of the deployment server
  - name: Configure Splunk as client of the deployment server
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk set deploy-poll {{ splunk_deploymentserver_adress }} -auth admin:changeme"
    ignore_errors: yes

  # Verify if our custom app has been already created
  - name: Check if the custom app containing inputs.conf exists
    stat: path="/opt/splunkforwarder/etc/apps/{{ splunk_appname }}"
    register: check_splunk_app

  # Configure inputs.conf for nmon performance
  - name: Create custom app {{ splunk_appname }}
    file: path="{{ splunk_installpath }}/splunkforwarder/etc/apps/{{ splunk_appname }}/local" owner=root state=directory mode=0755

  - name: Configure custom app {{ splunk_appname }} inputs.conf
    copy: src={{ docroot }}/vagrant-ansible-demo-syslog-ng/inputs.conf dest="{{ splunk_installpath }}/splunkforwarder/etc/apps/{{ splunk_appname }}/local/"
          owner=root
          group=root
          mode=0644
    when: check_splunk_app.stat.exists == false

  # Finally restart Splunk
  - name: Restart Splunk Universal Forwarder
    command: "{{ splunk_installpath }}/splunkforwarder/bin/splunk restart"

  handlers:

    - name: restart syslog-ng
      service: name=syslog-ng state=restarted

    - name: update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata

###############################################################

- hosts: syslog-ng-clients
  become: yes
  become_method: sudo

  vars:
   - docroot: /opt/deployment/nmon-logger

  tasks:

    #
    # For Ubuntu
    #

  - block:

    - name: Update cache for Ubuntu

      # Update apt cache
      apt: update_cache=yes

    - name: Install syslog-ng for Ubuntu

      # Install package
      - apt: name=syslog-ng state=present

    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    #
    # For RHEL / Centos
    #

  - block:

    - name: Install syslog-ng for RHEL/CentOS

      # Update package
      yum: name=syslog-ng state=latest

    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

# Configure time zone
  - name: Set timezone variables
    copy: content='Europe/Paris'
          dest=/etc/timezone
          owner=root
          group=root
          mode=0644
          backup=yes
    notify:
      - update timezone

  # Configure syslog-ng on this host: Send data to syslog-ng server, add syslog-ng repo, update and upgrade syslog-ng

  - name: Deploy syslog-ng central configuration
    copy: src={{ docroot }}/vagrant-ansible-demo-syslog-ng/client.conf dest=/etc/syslog-ng/conf.d/
    notify:
        - restart syslog-ng

  # NMON LOGGER installation

  - name: Create the system nmon account if required
    user: name=nmon comment="system account for nmon-logger" system=yes state=present

  - name: Create the /var/log/nmon-logger directory if required
    file: path=/var/log/nmon-logger owner=nmon state=directory mode=0755 recurse=no

  - name: Deploy nmon-logger binaries (/etc/nmon-logger)

  # synchronize (rsync) is the fatest method, but is more complex to achieve without any trouble
  # default uses copy to facilitate first configuration deployments

    copy: src={{ docroot }}/nmon-logger-syslog-ng/etc/nmon-logger dest=/etc/
            owner=nmon group=nmon mode=0755

  # synchronize: src={{ docroot }}/nmon-logger-syslog-ng/etc/nmon-logger dest=/etc/ rsync_path="sudo rsync" archive="yes" delete="yes" owner="no" group="no"

  - name: Set owner and group owner for nmon-logger binaries (/etc/nmon-logger)
    file: path=/etc/nmon-logger owner="nmon" group="nmon" recurse="yes"

  - name: Deploy nmon-logger cron.d configuration
    copy: src={{ docroot }}/nmon-logger-syslog-ng/etc/cron.d/nmon-logger dest=/etc/cron.d/
            owner=root group=root mode=0644

  - name: Deploy nmon-logger logrotate.d configuration
    copy: src={{ docroot }}/nmon-logger-syslog-ng/etc/logrotate.d/nmon-logger dest=/etc/logrotate.d/
            owner=root group=root mode=0644

  - name: Deploy nmon-logger syslog-ng.d configuration
    copy: src={{ docroot }}/nmon-logger-syslog-ng/etc/syslog-ng.d/nmon-logger.conf dest=/etc/syslog-ng/conf.f/
            owner=root group=root mode=0644
    notify:
        - restart syslog-ng

  handlers:

    - name: restart syslog-ng
      service: name=syslog-ng state=restarted

    - name: update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata
